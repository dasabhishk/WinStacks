name: Update Contributor Leaderboard

on:
  schedule:
    - cron: "0 0 * * 0"
  workflow_dispatch:

jobs:
  leaderboard:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # needed for git log fallback

      - name: Try GitHub API stats
        id: gh_stats
        env:
          GH_TOKEN: ${{ github.token }}
          REPO: ${{ github.repository }}
        run: |
          echo "login,added,removed,commits" > stats.csv
          gh api -X GET repos/$REPO/stats/contributors --paginate \
            --jq '.[] | .author.login as $login
                  | ([.weeks[].a] | add) as $added
                  | ([.weeks[].d] | add) as $removed
                  | .total as $commits
                  | [$login, $added, $removed, $commits] | @csv' >> stats.csv || true

          if [ $(wc -l < stats.csv) -le 1 ]; then
            echo "empty=true" >> $GITHUB_OUTPUT
          else
            echo "empty=false" >> $GITHUB_OUTPUT
          fi

      - name: Fallback with git log if API empty
        if: steps.gh_stats.outputs.empty == 'true'
        run: |
          echo "login,added,removed,commits" > stats.csv
          git log --pretty=format:'%an' | sort | uniq -c | while read count name; do
            login=$(echo "$name" | tr -d ' ')
            added=$(git log --author="$name" --pretty=tformat: --numstat | awk '{add+=$1} END {print add+0}')
            removed=$(git log --author="$name" --pretty=tformat: --numstat | awk '{del+=$2} END {print del+0}')
            echo "$login,$added,$removed,$count" >> stats.csv
          done

      - name: Fetch PR review stats
        env:
          GH_TOKEN: ${{ github.token }}
          REPO: ${{ github.repository }}
        run: |
          echo "login,reviews" > review_stats.csv
          gh api -X GET repos/$REPO/pulls?state=all --paginate --jq '.[].number' | while read pr; do
            gh api -X GET repos/$REPO/pulls/$pr/reviews --jq '.[].user.login' || true
          done | sort | uniq -c | awk '{print $2","$1}' >> review_stats.csv

      - name: Merge stats + build leaderboard
        run: |
          echo "# ðŸ“Š Contributor Leaderboard" > leaderboard.md
          echo "" >> leaderboard.md
          echo "| Rank | Contributor | LOC Added | LOC Removed | Commits | PR Reviews |" >> leaderboard.md
          echo "|------|-------------|-----------|-------------|---------|------------|" >> leaderboard.md

          > final_stats.csv
          while IFS=, read login added removed commits; do
            if [ "$login" = "login" ]; then continue; fi
            reviews=$(grep "^$login," review_stats.csv | cut -d',' -f2)
            if [ -z "$reviews" ]; then reviews=0; fi
            echo "$login,$added,$removed,$commits,$reviews" >> final_stats.csv
          done < stats.csv

          sort -t, -k2 -nr final_stats.csv | nl -s"," | while IFS=, read rank login added removed commits reviews; do
            echo "| $rank | $login | $added | $removed | $commits | $reviews |" >> leaderboard.md
          done

      - name: Commit leaderboard
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add leaderboard.md
          git commit -m "ðŸ”„ Update contributor leaderboard" || echo "No changes"
          git push
